package com.ustglobal.empspringmvc.cotroller;

import java.util.Date;
import java.text.SimpleDateFormat;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttribute;

import com.ustglobal.empspringmvc.dto.EmployeeBean;
import com.ustglobal.empspringmvc.service.EmployeeService;

@Controller
public class EmployeeController {

	@Autowired
	private EmployeeService service;
	
	public void InitBinder(WebDataBinder binder) {
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
		CustomDateEditor editor = new CustomDateEditor(format, true);
		binder.registerCustomEditor(Date.class,editor);
	}
	
	@GetMapping("/login")
	public String loginPage() {
		return "login";
	}
	@PostMapping("/login")
	public String login(int id,String password, HttpServletRequest request) {
		
		EmployeeBean bean = service.login(id, password);
		if(bean==null) {
			request.setAttribute("msg", "Invalid Credentials");
			return "login";
		}else {
			HttpSession session = request.getSession();
			session.setAttribute("bean", bean);
			return "home";
		}
		
	}
	@GetMapping("/register")
	public String registerPage() {
		return "register";
	}//register page end

	@PostMapping("/register")
	public String register(EmployeeBean bean,ModelMap map) {
		int  check = service.register(bean);
		if(check>0) {
			map.addAttribute("msg","Registration SUCCESSFUL and id is "+check);

		}else {
			map.addAttribute("msg", "Email is repeated");
		}
		return "login";
	
	}
	@GetMapping("/home")
	public String home(ModelMap map , @SessionAttribute(name="bean", required=false) EmployeeBean bean) {
		if(bean==null) {
			map.addAttribute("msg","Login First");
			return "login";
		}else {
			return "home";
		}
	}
	@PostMapping
	public String home() {
		return "home";
	}
	@GetMapping("/search")
	public String search(@RequestParam("id")int id, ModelMap map) {
		EmployeeBean bean =  service.searchEmployee(id);
		if(bean==null) {
			map.addAttribute("msg", "Data Not Found");
		}else {
			map.addAttribute("bean", bean);
		}
		return "home";
	}
	@GetMapping("/logout")
	public String logout(HttpSession session) {
		session.invalidate();
		return "login";
	}
}

